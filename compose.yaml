services:
  frontend:
    build: frontend/
    ports:
      - '3000:3000'
    networks:
      - application
  backend:
    build: backend/
    environment:
      - 'SERVER_PORT=8080'
      - 'FLYWAY_ENABLED=true'
      - 'DB_URL=jdbc:postgresql://postgres:5432/project'
      - 'DB_USER=worker-qualification-service'
      - 'DB_PASS=secret'
      - 'DB_SCHEMA=service'
      - 'MAIL_HOST=smtp.mail.ru'
      - 'MAIL_PORT=465'
      - 'MAIL_USERNAME='
      - 'MAIL_USER_PASSWORD='
      - 'NOTIFICATION_THREAD_POOL_SIZE=5'
      - 'NOTIFICATION_RECIPIENT='
    ports:
      - '10101:8080'
    depends_on:
      - postgres
    networks:
      - application
  postgres:
    container_name: application_postgres
    image: postgres:14.5
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "project"
      POSTGRES_USER: "worker-qualification-service"
      POSTGRES_PASSWORD: "secret"
      PGDATA: "/dev/data"
    volumes:
      - ./data:/dev/data
    ports:
      - "6542:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U worker-qualification-service -d project" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    networks:
      - application

networks:
  application:
    driver: bridge